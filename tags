!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/3fdf28bc/
Args	q1.c	/^typedef struct Args {$/;"	s	file:
Args	q1.c	/^} Args;$/;"	t	typeref:struct:Args	file:
BASE_FLAGS	.ycm_extra_conf.py	/^BASE_FLAGS = [$/;"	v
CFLAGS	Makefile	/^CFLAGS = -g -Wall -pthread$/;"	m
FindNearest	.ycm_extra_conf.py	/^def FindNearest(path, target, build_folder):$/;"	f
FlagsForClangComplete	.ycm_extra_conf.py	/^def FlagsForClangComplete(root):$/;"	f
FlagsForCompilationDatabase	.ycm_extra_conf.py	/^def FlagsForCompilationDatabase(root, filename):$/;"	f
FlagsForFile	.ycm_extra_conf.py	/^def FlagsForFile(filename):$/;"	f
FlagsForInclude	.ycm_extra_conf.py	/^def FlagsForInclude(root):$/;"	f
GetCompilationInfoForFile	.ycm_extra_conf.py	/^def GetCompilationInfoForFile(database, filename):$/;"	f
HEADER_DIRECTORIES	.ycm_extra_conf.py	/^HEADER_DIRECTORIES = [$/;"	v
HEADER_EXTENSIONS	.ycm_extra_conf.py	/^HEADER_EXTENSIONS = [$/;"	v
IsHeaderFile	.ycm_extra_conf.py	/^def IsHeaderFile(filename):$/;"	f
MakeRelativePathsInFlagsAbsolute	.ycm_extra_conf.py	/^def MakeRelativePathsInFlagsAbsolute(flags, working_directory):$/;"	f
NORMAL	q1.c	/^    NORMAL,$/;"	e	enum:__anon7c9bdd180103	file:
PRINT_SORTED	q1.c	/^#define PRINT_SORTED /;"	d	file:
PROC	q1.c	/^    PROC,$/;"	e	enum:__anon7c9bdd180103	file:
SOURCE_DIRECTORIES	.ycm_extra_conf.py	/^SOURCE_DIRECTORIES = [$/;"	v
SOURCE_EXTENSIONS	.ycm_extra_conf.py	/^SOURCE_EXTENSIONS = [$/;"	v
Strategy	q1.c	/^} Strategy;$/;"	t	typeref:enum:__anon7c9bdd180103	file:
THREAD	q1.c	/^    THREAD$/;"	e	enum:__anon7c9bdd180103	file:
__anon7c9bdd180103	q1.c	/^typedef enum {$/;"	g	file:
all	Makefile	/^all: q1$/;"	t
arr	q1.c	/^        *arr;$/;"	m	struct:Args	typeref:typename:int *	file:
clean	Makefile	/^clean:$/;"	t
copy	q1.c	/^void copy(int * a, int * b, int n) {$/;"	f	typeref:typename:void
getRunTime	q1.c	/^double getRunTime(struct timespec t) {$/;"	f	typeref:typename:double
getSharedMemory	q1.c	/^int * getSharedMemory(size_t size) {$/;"	f	typeref:typename:int *
l	q1.c	/^    int l,$/;"	m	struct:Args	typeref:typename:int	file:
main	q1.c	/^int main() {$/;"	f	typeref:typename:int
partition	q1.c	/^int partition(int * arr, int l, int r) {$/;"	f	typeref:typename:int
q1	Makefile	/^q1: q1.c$/;"	t
quickSort	q1.c	/^void quickSort(int * arr, int l, int r) {$/;"	f	typeref:typename:void
quickSortProcess	q1.c	/^void quickSortProcess(int * arr, int l, int r) {$/;"	f	typeref:typename:void
quickSortThread	q1.c	/^void * quickSortThread(void * args) {$/;"	f	typeref:typename:void *
r	q1.c	/^        r,$/;"	m	struct:Args	typeref:typename:int	file:
randomInt	q1.c	/^int randomInt(int l, int r) {$/;"	f	typeref:typename:int
sort	q1.c	/^void sort(int * arr, int n, Strategy s) {$/;"	f	typeref:typename:void
swap	q1.c	/^void swap(int * a, int * b) {$/;"	f	typeref:typename:void
